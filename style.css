body {
    margin: 0;
    padding: 0;
    font-family: 'Comfortaa', cursive;
    color: var(--text);
    background-color: var(--background);
    /* we can transition changing themes with transition property and make background-color change faster than text which
    makes cool offset effect */
    transition: background-color 0.5s ease-in-out, color 0.8s ease-in-out;
}

ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
}

a {
    /* currentColor inherits color from the nearest parent */
    color: currentColor;
    text-decoration: none;
}

.navbar {
    height: 70px;
    width: 100%;
    background: var(--background-nav);
    color: var(--text);
}

.navbar-list {
    display: flex;
    align-items: center;
    justify-content: space-evenly;
    /* height: 100%; puts every li item in the middle over y-axis - it fills parent's container */
    height: 100%;
}

.navbar-list > li {
    cursor: pointer;
}

.navbar-list li:nth-child(3) {
    position: relative;
}

header {
    padding: 1em;
    /* for some reason 'background-color' property doesn't work on clip-path, but 'background' property works */
    background: var(--background-nav);
    margin-bottom: 1em;
    padding-bottom: 3.5em;
    text-align: center;
    /* we can imagine polygon as putting a bunch of points to a element, first number equals to x-axis and 
    the second one equals to y-axis */
    /* firefox gives us possibility to play around with this property dragging points around */
    clip-path: polygon(50% 0%, 100% 0%, 100% 70%, 50% 100%, 0% 70%, 0% 0%);
}

img {
    width: 200px;
    height: auto;
}

main {
    padding: 2rem;
}

/* clickable dropdown menu with just CSS */
.dropdown {
    position: absolute;
    top: 20px;
    width: 500px;
    /* invisible until it is actually focused */
    opacity: 0;
    /* setting z-index of a child element to a value greater than z-index of parent element, puts the child
    element on top*/
    z-index: 2;
    border-top: 2px solid var(--border);
    border-bottom-left-radius: 15px;
    border-bottom-right-radius: 15px;
    display: flex;
    align-items: center;
    justify-content: space-around;
    height: 3rem;
    margin-top: 2rem;
    padding: 0.5rem;
    box-shadow: rgba(2, 8, 20, 0.2) 0px 0.175em 0.5em;
    /* translate it to the left to make it centered */
    transform: translateX(-44%);
    /* transition on opacity property when dropdown gets out of focus */
    transition: opacity 0.25s ease-out;
    background-color: var(--background-dropdown);
}

.has-dropdown:focus-within .dropdown {
    opacity: 1;
    transition: opacity 0.25s ease-in;
    transform-origin: left;
}

.dropdown-item {
    position: relative;
    width: 100%;
    height: 100%;
    font-weight: bold;
    /* anchor tag is by default inline element which means that we can't define its width and height so we have to
    display that element as inline-block */
    text-align: center;
}

.dropdown-item a,
.dropdown-item a::before {
    line-height: 47px;
}


.dropdown-item a::before {
    display: inline-block;
    content: '';
    border: 2px solid var(--border);
    border-radius: 50%;
    height: 1.5rem;
    width: 1.5rem;
    /* vertical-align: middle; vertically aligns before element to the middle of element connected to it */
    vertical-align: middle;
    margin-right: 10px;
} 

/* Themes */

/* in root element we can define variables for static values that don't change */
:root {
    --gray0: #f8f8f8;
    --gray1: #dbe1e8;
    --gray2: #b2becd;
    --gray3: #6c7983;
    --gray4: #454e56;
    --gray5: #2a2e35;
    --gray6: #12181b;
    --blue: #0084a5;
    --purple: #a82dd1;
    --yellow: #fff565;
}

.light {
    --background: var(--gray0);
    --background-nav: linear-gradient(to right, var(--gray1), var(--gray3));
    --background-dropdown: var(--gray0);
    --text: var(--gray6);
    --border: var(--blue);
    --background-solar: var(--yellow);
}

.dark {
    --background: var(--gray5);
    --background-nav: linear-gradient(to right, var(--gray5), var(--gray6));
    --background-dropdown: var(--gray6);
    --text: var(--gray0);
    --border: var(--purple);
    --background-solar: var(--blue);
}

.solar {
    /* override existing colors */
    --gray0: #fbffd4;
    --gray1: #f7f8d0;
    --gray2: #b6f880;
    --gray3: #5ec72d;
    --gray4: #3ea565;
    --gray5: #005368;
    --gray6: #003d4c;

    --background: var(--gray0);
    --background-nav: linear-gradient(to right, var(--gray1), var(--gray3));
    --background-dropdown: var(--gray0);
    --text: var(--gray6);
    --border: var(--blue);
    --background-solar: var(--yellow);
}